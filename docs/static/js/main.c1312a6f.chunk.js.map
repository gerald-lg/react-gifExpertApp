{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrimItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","id","value","onChange","event","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","original","GifGrimItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,0BAAMC,SAjBW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAcd,2BAAOO,KAAK,OACJC,GAAG,gBACHC,MAAOV,EACPW,SAbU,SAACC,GAEvBX,EAAcW,EAAMC,OAAOH,Y,uBClBtBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAKgB,EAAIhB,GACTiB,MAAQD,EAAIC,MACZT,IAAG,UAAGQ,EAAIE,cAAP,aAAG,EAAYC,SAASX,QAVhB,kBAcZM,GAdY,4CAAH,sDCCPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACjC,OACI,yBAAKa,UAAU,0CAEX,yBAAKC,IAAKd,EAAKe,IAAKN,MCFnBO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAE/BuB,KAAM,GACNY,SAAU,IAL0B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBpC,OAbJC,qBAAU,WAEFvB,EAAQC,GACHuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKtB,CAACnB,IAEGoB,EDpBaK,CAAazB,GAA9BO,EAF4B,EAE5BA,KAAMY,EAFsB,EAEtBA,QAGb,OACI,oCACI,wBAAIJ,UAAU,oCAAqCf,GAElDmB,GAAY,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAGRR,EAAKE,KAAI,SAACC,GAAD,OACL,kBAAC,EAAD,iBACQA,EADR,CAEIgB,IAAOhB,EAAIhB,YEhB1BiC,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAe9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CAAS0B,IAAK1B,EACVA,SAAUA,U,MCzBlC6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c1312a6f.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');  \r\n        };\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n\r\n        setInputValue(event.target.value);\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input type='text' \r\n                    id='inputCategory'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n            >\r\n\r\n            </input>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = { setCategories: PropTypes.func.isRequired }\r\n\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=RyEwHFNpQla38ruFFrm5UWdWUOB0A4Z0`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id : img.id, \r\n            title : img.title, \r\n            url : img.images?.original.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n   \r\n}","import React from 'react'\r\n\r\nexport const GifGrimItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            \r\n            <img src={url} alt={title} />\r\n\r\n            {/* <p> {title} </p> */}\r\n        </div>\r\n    )\r\n}\r\n","import React, {/*  useEffect, useState  */} from 'react'\r\nimport { useFecthGifs } from '../hooks/useFetchGifs'\r\nimport { GifGrimItem } from './GifGrimItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data, loading} = useFecthGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__pulse\" >{category}</h3>\r\n\r\n            {loading &&  <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            {<div className=\"card-grid\">\r\n                \r\n                {\r\n                    data.map((img) => (\r\n                        <GifGrimItem \r\n                            {...img}\r\n                            key = {img.id}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFecthGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        \r\n        data: [], \r\n        loading : true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n            getGifs(category)\r\n                .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                });\r\n    \r\n           \r\n        }, [category]);\r\n\r\n        return state;\r\n\r\n\r\n}","\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /* const handleAdd = () => {\r\n\r\n        // return setCategories(categories.concat('Detective Connan'));\r\n        // return setCategories([...categories, 'Detective Connan']);\r\n\r\n        // cats llama al estado anterior y le agrega el nuevo elemento\r\n        return setCategories(cats => [...cats, 'Detective Connan']);\r\n\r\n\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n        \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                    <GifGrid key={category} \r\n                        category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}